name: Shell commands

on:
  pull_request:
    types: [closed]
    branches:
      - release/dev/deploy_all
      - release/stg/deploy_all
      - release/prd/deploy_all
  # push:

env:
  CACHED_BUILD: true
  BUILD_ENV: |
    ${{ 
      contains( github.ref, '/prd/' ) &&
        'prd' ||
      contains( github.ref, '/stg/' ) &&
        'stg' ||
      'dev'
    }}
  BUILD_SECRET: |
    ${{ 
      contains( github.ref, '/prd/' ) &&
        secrets.PRD_BUILD_SECRET ||
      contains( github.ref, '/stg/' ) &&
        secrets.STG_BUILD_SECRET ||
      secrets.DEV_BUILD_SECRET
    }}

jobs:
  set_env:
    runs-on: ubuntu-latest
    outputs:
      env: $GITHUB_ENV
    steps:
      - name: Initiate new env
        id: set_variable
        run: |
          if [ ${{ github.ref }} == "release/prd/deploy_all" ]; then
            echo "JOB_BUILD_ENV=prd" >> $GITHUB_ENV
            echo "JOB_BUILD_SECRET=${{ secrets.PRD_BUILD_SECRET }}" >> $GITHUB_ENV
          elif [ ${{ github.ref }} == "release/stg/deploy_all" ]; then
            echo "JOB_BUILD_ENV=stg" >> $GITHUB_ENV
            echo "JOB_BUILD_SECRET=${{ secrets.STG_BUILD_SECRET }}" >> $GITHUB_ENV
          else
            echo "JOB_BUILD_ENV=dev" >> $GITHUB_ENV
            echo "JOB_BUILD_SECRET=${{ secrets.DEV_BUILD_SECRET }}" >> $GITHUB_ENV
          fi

  run-shell-command:
    needs: [set_env]
    runs-on: ubuntu-latest
    steps:
      - name: Cached Build
        if: env.CACHED_BUILD == true
        run: |
          echo "Using Cached Build"

      - name: Normal Build
        if: env.CACHED_BUILD != true
        run: |
          echo "Using Normal Build"

      - name: echo ${BUILD_ENV} Envs
        run: |
          echo command1: ${BUILD_ENV}
          echo command1: ${BUILD_SECRET}
          echo "------------------------"
          echo command1: ${{env.JOB_BUILD_ENV}}
          echo command1: ${{env.JOB_BUILD_SECRET}}
          echo "------------------------"
          echo command1: ${{needs.set_env.outputs.env.JOB_BUILD_ENV}}
          echo command1: ${{needs.set_env.outputs.env.JOB_BUILD_SECRET}}
      - name: ${BUILD_ENV} checkout phase
        uses: actions/checkout@v3
      - name: ${BUILD_ENV} check files
        run: |
          ls -la
          echo ${{ env.JOB_BUILD_ENV }}
          cat ${{ env.JOB_BUILD_SECRET }}
  
  run-shell-command-2:
    needs: [set_env]
    runs-on: ubuntu-latest
    steps:
      - name: echo Envs
        run: |
          echo command2: ${BUILD_ENV}
          echo command2: ${BUILD_SECRET}



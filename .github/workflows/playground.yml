name: Shell commands

on:
  pull_request:
    types: [closed]
    branches:
      - release/dev/deploy_all
      - release/stg/deploy_all
      - release/prd/deploy_all
  # push:

env:
  BUILD_ENV: |
    ${{ 
      contains( github.ref, '/prd/' ) &&
        'prd' ||
      contains( github.ref, '/stg/' ) &&
        'stg' ||
      'dev'
    }}
  BUILD_SECRET: |
    ${{ 
      contains( github.ref, '/prd/' ) &&
        secrets.PRD_BUILD_SECRET ||
      contains( github.ref, '/stg/' ) &&
        secrets.STG_BUILD_SECRET ||
      secrets.DEV_BUILD_SECRET
    }}

jobs:
  set_env:
    runs-on: ubuntu-latest
    outputs:
      build_env: ${{ steps.set_variable.outputs.build_env }}
      build_secret: ${{ steps.set_variable.outputs.build_secret }}
    steps:
      - name: Initiate new env
        id: set_variable
        run: |
          if [ ${{ github.ref }} == "release/prd/deploy_all" ]; then
            echo "::set-output name=build_env::prd"
            echo "::set-output name=build_secret::prd_secret"
          elif [ ${{ github.ref }} == "release/stg/deploy_all" ]; then
            echo "::set-output name=build_env::stg"
            echo "::set-output name=build_secret::stg_secret"
          else
            echo "::set-output name=build_env::dev"
            echo "::set-output name=build_secret::dev_secret"
          fi

  run-shell-command:
    needs: [set_env]
    runs-on: ubuntu-latest
    steps:
      - name: echo Envs
        run: |
          echo command1: ${BUILD_ENV}
          echo command1: ${BUILD_SECRET}
          echo "-----------------------"
          echo "job env1: ${{ needs.set_env.outputs.build_env }}"
          echo "job env1: ${{ needs.set_env.outputs.build_secret }}"
      - name: checkout phase
        uses: actions/checkout@v3
      - name: check files
        run: |
          ls -la
          cat ./${{ needs.set_env.outputs.build_secret }}.txt
  
  run-shell-command-2:
    needs: [set_env]
    runs-on: ubuntu-latest
    steps:
      - name: echo Envs
        run: |
          echo command2: ${BUILD_ENV}
          echo command2: ${BUILD_SECRET}
          echo "-----------------------"
          echo "job env2: ${{ needs.set_env.outputs.build_env }}"
          echo "job env2: ${{ needs.set_env.outputs.build_secret }}"


